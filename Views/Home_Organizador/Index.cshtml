<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Emissor de Certificados</title>
    <div id="logoEmescam"><img src="/LogoEmescam.png" alt="logo"></div>
    <link rel="stylesheet" href="~/css/Home_Organizador.css">
    <script src="~/js/Home_Organizador.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>

</head>

<body>
    <div class="cartao-menu">
        <div style="font-size:larger">Bem-Vindo! "ORGANIZADOR"</div>
        <form>
            <div>
                <a class="nav-link text-dark" href="#" onclick="mostrarCard('meus-eventos')">Meus Eventos</a>
                <a class="nav-link text-dark" href="#" onclick="mostrarCard('buscar-pessoas')">Buscar Pessoas</a>
                <a id="sair-link" class="nav-link text-dark" asp-action="Login" asp-controller="Organizador">Sair</a>
            </div>
        </form>


        <!--CADASTRAR EVENTO-->
        <div id="card-evento" class="card">
            <h3>Novo Evento</h3>
            <hr>
            <!-- Input para o nome do evento -->
            <input type="text" id="nomeEvento" placeholder="Nome do Evento">

            <!--Aqui preenchem os dados-->
            <div id="dados-form">
                <input type="text" id="inputNome" placeholder="Nome">
                <input type="text" id="inputCPF" placeholder="CPF">
                <input type="text" id="inputEmail1" placeholder="Email">
                <input type="text" id="tipoPessoa" placeholder="Tipo Pessoa">
                <textarea id="textareaTexto" placeholder="Texto"></textarea>
                <!-- <button id="botaoAdicionar" onclick="atualizarDados()">Adicionar Dados</button> -->
                <button id="botaoAcao" onclick="atualizarDados()">Adicionar Dados</button>
            </div>
            <hr>
            <div class="upload-container">
                <!-- Botão de importar EXCEL -->
                <input type="file" id="excelFile" accept=".xlsx">
                <button onclick="importarExcel()">Importar Pessoas</button>
                <input type="file" id="arteCertificadoFile" accept=".jpeg">
                <button onclick="importarArteCertificado()">Importar Certificado</button>
            </div>
            <!--Tabela que será preenchida-->
            <table id="tabela" class="display">
                <thead>
                    <tr>
                        <th>Nome</th>
                        <th>CPF</th>
                        <th>Email</th>
                        <th>Tipo Pessoa</th>
                        <th>Texto</th>
                        <th>ações</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
            <button id="CadastrarEvento">Cadastrar Evento</button>
        </div>

        @* <div id="card-meus-eventos" class="card">
            <h4>Meus Eventos</h4>
            <!-- Botão de "Adicionar Evento" -->
            <button class="botao-adicionar" onclick="exibirFormularioAdicionar()"></button>

            <!-- Campo de pesquisa -->
            <input type="text" id="campo-pesquisa" placeholder="Pesquisar eventos...">

            <div class="tabela-eventos">
                <!-- Tabela de eventos -->
                <table>
                    <tr>
                        <td class="eventos">Informações do evento 1</td>
                    </tr>
                </table>
            </div>
        </div> *@



        <div id="card-meus-eventos" class="card">
            <h4>Meus Eventos</h4>
            <!-- Botão de "Adicionar Evento" -->
            <button class="botao-adicionar" onclick="exibirFormularioAdicionar()"></button>

            <!-- Campo de pesquisa -->
            <input type="text" id="campo-pesquisa" placeholder="Pesquisar eventos...">

            <div class="tabela-eventos">
                <!-- Tabela de eventos -->
                <table>
                    <thead>
                        <tr>
                            <th style="width: 5%;">Código</th>
                            <th style="width: 80%">Nome</th>
                            <th style="width: 15%;">Imagem do Certificado</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!--@foreach (var evento in Model) 
                        {
                            <tr>
                                <td>@evento.Id</td>
                                <td>@evento.Nome</td>                                
                                <td>
                                    <!-- Miniatura da imagem -->
                                    <img src="@Url.Action("VisualizarImagem", "Home_Organizador", new { id = evento.Id })"
                                         alt="Imagem do Certificado"
                                         style="width: 60px; height: auto; cursor: pointer;"
                                         onclick="window.open('@Url.Action("VisualizarImagem", "Home_Organizador", new { id = evento.Id })')">
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div id="card-buscar-pessoas" class="card">
            Informações sobre Buscar Pessoas
        </div>
    </div>
</body>
</html>

<script>
    window.onload = function () {
        mostrarCard('meus-eventos');
    };

    function mostrarCard(id) {
        var cards = document.querySelectorAll('.card');
        cards.forEach(function (card) {
            card.style.display = 'none';
        });

        var cardToShow = document.getElementById('card-' + id);
        if (cardToShow) {
            cardToShow.style.display = 'block';
        }
    }

    function exibirFormularioAdicionar() {
        // Oculta todos os cards exceto o card de novo evento
        var cards = document.querySelectorAll('.card');
        cards.forEach(function (card) {
            card.style.display = 'none';
        });

        // Exibe o card de novo evento
        var cardNovoEvento = document.getElementById('card-evento');
        if (cardNovoEvento) {
            cardNovoEvento.style.display = 'block';

            // Rola a página até o card de novo evento
            cardNovoEvento.scrollIntoView({ behavior: 'smooth' });
        }
    }

    // Captura o campo de pesquisa
    var campoPesquisa = document.getElementById('campo-pesquisa');

    // Captura a tabela de eventos
    var tabelaEventos = document.querySelector('.tabela-eventos');
    var linhasEventos = tabelaEventos.getElementsByTagName('tr');

    // Adiciona um ouvinte de evento de entrada ao campo de pesquisa
    campoPesquisa.addEventListener('input', function () {
        var termoPesquisa = campoPesquisa.value.toLowerCase(); // Converte o termo de pesquisa para minúsculas

        // Itera sobre as linhas da tabela de eventos
        for (var i = 1; i < linhasEventos.length; i++) { // Começa do índice 1 para ignorar o cabeçalho da tabela
            var colunasEvento = linhasEventos[i].getElementsByTagName('td'); // Obtém todas as colunas da linha

            var encontrado = false; // Variável para rastrear se o termo de pesquisa foi encontrado em qualquer coluna

            // Itera sobre as colunas do evento
            for (var j = 0; j < colunasEvento.length; j++) {
                var textoColuna = colunasEvento[j].textContent || colunasEvento[j].innerText; // Obtém o texto da coluna
                if (textoColuna.toLowerCase().indexOf(termoPesquisa) > -1) { // Verifica se o termo de pesquisa está presente na coluna
                    encontrado = true;
                    break; // Interrompe a iteração se o termo de pesquisa for encontrado em qualquer coluna
                }
            }

            // Exibe ou oculta a linha com base no resultado da pesquisa
            if (encontrado) {
                linhasEventos[i].style.display = ''; // Exibe a linha se o termo de pesquisa for encontrado em qualquer coluna
            } else {
                linhasEventos[i].style.display = 'none'; // Oculta a linha se o termo de pesquisa não for encontrado em nenhuma coluna
            }
        }
    });

    //Preencher table de novo evento
    // Função para adicionar botões de exclusão e atualização a cada linha da tabela
    function adicionarBotoesLinha(linha) {
        var colunaAcoes = linha.insertCell(-1);
        var botaoExcluir = document.createElement("button");
        botaoExcluir.textContent = "Excluir";
        botaoExcluir.onclick = function () {
            excluirLinha(linha);
        };
        colunaAcoes.appendChild(botaoExcluir);

        var botaoAtualizar = document.createElement("button");
        botaoAtualizar.textContent = "Atualizar";
        botaoAtualizar.onclick = function () {
            carregarDadosParaEditar(linha);
        };
        colunaAcoes.appendChild(botaoAtualizar);
    }

    // Função para adicionar ou atualizar dados
    function atualizarDados() {
        if (modoAdicionar) {
            // Se estiver no modo de adicionar, adiciona uma nova linha
            var tabela = document.getElementById("tabela");

            // Obter os valores dos inputs
            var nome = document.getElementById("inputNome").value;
            var cpf = document.getElementById("inputCPF").value;
            var email = document.getElementById("inputEmail1").value;
            var tipoPessoa = document.getElementById("tipoPessoa").value;
            var texto = document.getElementById("textareaTexto").value;

            // Verificar se todos os campos estão preenchidos
            if (nome === "") {
                alert("Por favor, preencha o campo 'Nome'.");
                return;
            }
            if (cpf === "") {
                alert("Por favor, preencha o campo 'CPF'.");
                return;
            }
            if (email === "") {
                alert("Por favor, preencha o campo 'Email'.");
                return;
            }
            if (tipoPessoa === "") {
                alert("Por favor, selecione uma opção no campo 'Tipo de Pessoa'.");
                return;
            }
            if (texto === "") {
                alert("Por favor, preencha o campo 'Texto'.");
                return;
            }

            // Adicionar uma nova linha com os valores inseridos
            var novaLinha = tabela.insertRow(-1); // Insere na última posição da tabela
            var celulaNome = novaLinha.insertCell(0);
            var celulaCPF = novaLinha.insertCell(1);
            var celulaEmail = novaLinha.insertCell(2);
            var celulaTipoPessoa = novaLinha.insertCell(3);
            var celulaTexto = novaLinha.insertCell(4);

            // Atribuir os valores às células da nova linha
            celulaNome.innerHTML = nome;
            celulaCPF.innerHTML = cpf;
            celulaEmail.innerHTML = email;
            celulaTipoPessoa.innerHTML = tipoPessoa;
            celulaTexto.innerHTML = texto;

            // Adicionar botões de exclusão e atualização
            adicionarBotoesLinha(novaLinha);

            // Limpar os inputs após adicionar a tabela
            limparCampos();
        } else {
            // Se estiver no modo de atualizar, atualiza a linha existente
            var celulas = linhaEditavel.getElementsByTagName("td");
            celulas[0].innerHTML = document.getElementById("inputNome").value;
            celulas[1].innerHTML = document.getElementById("inputCPF").value;
            celulas[2].innerHTML = document.getElementById("inputEmail1").value;
            celulas[3].innerHTML = document.getElementById("tipoPessoa").value;
            celulas[4].innerHTML = document.getElementById("textareaTexto").value;

            // Volta para o modo de adicionar
            alternarModo();
        }
    }

    // Função para excluir uma linha da tabela
    function excluirLinha(linha) {
        var index = linha.rowIndex;
        document.getElementById("tabela").deleteRow(index);
    }

    // Função para atualizar uma linha da tabela
    function atualizarLinha(linha) {
        var celulas = linha.getElementsByTagName("td");
        var inputNome = document.getElementById("inputNome");
        var inputCPF = document.getElementById("inputCPF");
        var inputEmail = document.getElementById("inputEmail1");
        var inputTipoPessoa = document.getElementById("tipoPessoa");
        var textareaTexto = document.getElementById("textareaTexto");

        inputNome.value = celulas[0].innerHTML;
        inputCPF.value = celulas[1].innerHTML;
        inputEmail.value = celulas[2].innerHTML;
        inputTipoPessoa.value = celulas[3].innerHTML;
        textareaTexto.value = celulas[4].innerHTML;
    }

    // Variável para controlar o modo de operação (adicionar ou atualizar)
    var modoAdicionar = true;

    // Função para alternar entre os modos de adicionar e atualizar
    function alternarModo() {
        modoAdicionar = !modoAdicionar;
        var botaoAcao = document.getElementById("botaoAcao");
        if (modoAdicionar) {
            botaoAcao.textContent = "Adicionar Dados";
        } else {
            botaoAcao.textContent = "Atualizar Dados";
        }
    }

    // Função para limpar os campos de entrada
    function limparCampos() {
        document.getElementById("inputNome").value = "";
        document.getElementById("inputCPF").value = "";
        document.getElementById("inputEmail1").value = "";
        document.getElementById("tipoPessoa").value = "";
        document.getElementById("textareaTexto").value = "";
    }

    // Função para carregar os dados da linha de volta para os campos de entrada
    function carregarDadosParaEditar(linha) {
        var celulas = linha.getElementsByTagName("td");
        var inputNome = document.getElementById("inputNome");
        var inputCPF = document.getElementById("inputCPF");
        var inputEmail = document.getElementById("inputEmail1");
        var inputTipoPessoa = document.getElementById("tipoPessoa");
        var textareaTexto = document.getElementById("textareaTexto");

        inputNome.value = celulas[0].innerHTML;
        inputCPF.value = celulas[1].innerHTML;
        inputEmail.value = celulas[2].innerHTML;
        inputTipoPessoa.value = celulas[3].innerHTML;
        textareaTexto.value = celulas[4].innerHTML;

        // Salva a linha editável para referência posterior
        linhaEditavel = linha;

        // Muda para o modo de atualização
        alternarModo();
    }

    // Captura o botão "Cadastrar Evento"
    var botaoCadastrarEvento = document.getElementById('CadastrarEvento');

    // Adiciona um ouvinte de evento de clique ao botão
    botaoCadastrarEvento.addEventListener('click', function () {
        // Captura o valor do campo de entrada do nome do evento
        var nomeEvento = document.getElementById('nomeEvento').value;

        // Se o nome do evento estiver vazio, não faz nada
        if (nomeEvento.trim() === '') {
            alert('Por favor, insira o nome do evento.');
            return;
        }

        // Cria uma nova linha na tabela de eventos
        var tabelaEventos = document.querySelector('.tabela-eventos table');
        var novaLinha = tabelaEventos.insertRow(-1);
        var celulaEvento = novaLinha.insertCell(0);

        // Adiciona o nome do evento como texto dentro da célula da nova linha
        celulaEvento.textContent = nomeEvento;
    });


    // Função para importar dados da planilha Excel e preencher a tabela
    function importarExcel() {
        var input = document.getElementById('excelFile');

        // Verificar se um arquivo foi selecionado
        if (!input.files || input.files.length === 0) {
            alert('Por favor, selecione um arquivo Excel.');
            return;
        }

        var file = input.files[0];
        var reader = new FileReader();

        reader.onload = function (e) {
            var data = new Uint8Array(e.target.result);
            var workbook = XLSX.read(data, { type: 'array' });

            // Obter a primeira planilha do arquivo
            var sheetName = workbook.SheetNames[0];
            var worksheet = workbook.Sheets[sheetName];

            // Verificar se o modelo da planilha está correto
            var expectedColumns = ['NOME_PESSOA', 'CPF_PESSOA', 'EMAIL_PESSOA', 'TIPO_PESSOA', 'TEXTO'];
            var headerRow = XLSX.utils.sheet_to_json(worksheet, { header: 1, range: 'A1:E1' })[0];
            var isValidModel = expectedColumns.every(function (col, index) {
                return headerRow[index] === col;
            });

            if (!isValidModel) {
                alert('O modelo da planilha selecionada está incorreto.');
                return;
            }

            // Percorrer os registros da planilha e preencher a tabela
            var table = document.getElementById('tabela').getElementsByTagName('tbody')[0];
            var rows = XLSX.utils.sheet_to_json(worksheet, { header: 1, range: 1 });

            rows.forEach(function (row) {
                var newRow = table.insertRow(-1);
                row.forEach(function (cellContent) {
                    var cell = newRow.insertCell();
                    cell.textContent = cellContent;
                });
                adicionarBotoesLinha(newRow); // Adicionar botões de exclusão e atualização
            });
        };

        reader.readAsArrayBuffer(file);
    }




</script>
