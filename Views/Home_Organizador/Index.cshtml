<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Emissor de Certificados</title>
    <link rel="stylesheet" href="/css/Home_Organizador.css">
    <script src="/js/Home_Organizador.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
</head>
<body>
    <img id="logo" src="/logoemescam.png">
    <div class="cartao-menu">
        <div style="font-size:larger">Bem-Vindo! "ORGANIZADOR"</div>
        <form>
            <div>
                <a class="nav-link text-dark" href="#" onclick="mostrarCard('meus-eventos')">Meus Eventos</a>
                <a class="nav-link text-dark" href="#" onclick="mostrarCard('buscar-pessoas')">Buscar Pessoas</a>
                <a id="sair-link" class="nav-link text-dark" asp-action="Login" asp-controller="Organizador">Sair</a>
            </div>
        </form>

        <!--CADASTRAR EVENTO-->
        <div id="card-evento" class="card">
            <h3>Novo Evento</h3>
            <hr>

            <form id="formEvento" asp-controller="Home_Organizador" asp-action="NovoEvento" method="post" enctype="multipart/form-data">

                <!-- Input para o nome do evento -->
                <input type="text" id="nomeEvento" name="nomeEvento" placeholder="Nome do Evento" required>
                <hr>
                <!--Aqui preenchem os dados-->
                <div class="dados-form">
                    <div id="divDados">
                        <input type="text" id="inputNome" placeholder="Nome">
                        <input type="text" id="inputCPF" placeholder="CPF">
                        <input type="text" id="inputEmail1" placeholder="Email">
                        <input type="text" id="tipoPessoa" placeholder="Tipo Pessoa">
                    </div>
                    <textarea id="textareaTexto" placeholder="Texto"></textarea>
                </div>

                @*Se o type não for definido em um button é atribuido a ele como default o type=submit*@
                @*é recomendável explicitar sempre o type quando o form tiver butões com finalizadades diferentes*@
                <button type="button" id="botaoAcao" onclick="atualizarDados()">Adicionar Dados</button>
                <hr>

                <!--Tabela que será preenchida-->
                <div class="tabela-container">
                    <table id="tabela" class="display">
                        <thead>
                            <tr>
                                <th style="width: 20%">Nome</th>
                                <th style="width: 10%">CPF</th>
                                <th style="width: 15%">Email</th>
                                <th style="width: 10%">Tipo Pessoa</th>
                                <th style="width: 40%">Texto</th>
                                <th style="width: 5%">Ações</th>
                            </tr>
                        </thead>
                        <tbody id="eventos-tbody">
                            <!-- Os dados serão inseridos dinamicamente aqui -->
                        </tbody>
                    </table>
                </div>

                <div class="upload-container">
                    <!-- Botão de importar EXCEL -->
                    <input type="file" id="excelFile" accept=".xlsx" style="display:none" onchange="importarExcel()">
                    <label for="excelFile" class="custom-file-upload">
                        Importar Pessoas
                    </label>
                    <span id="fileName" style="margin-left: 10px;"></span>
                    <br>
                    <!-- Novo input text ao lado esquerdo do botão "Importar Certificado" -->
                    <input type="text" id="novoInputText" name="novoInputText" placeholder="Selecione o arquivo" required>
                    <!-- Botão de importar Certificado -->
                    <input type="file" id="arteCertificadoFile" name="arteCertificadoFile" accept=".jpeg, .jpg" style="display:none">
                    <label for="arteCertificadoFile" class="custom-file-upload">
                        Selecionar Certificado
                    </label>
                    <span id="certificadoFileName" style="margin-left: 10px;"></span>

                </div>
                <input type="hidden" id="tableData" name="tableData">
                <button type="submit" id="CadastrarEvento" onclick="return processarDadosTabela(event)">Cadastrar Evento</button>

            </form>

        </div>
        <!-- MEUS EVENTOS -->
        <div id="card-meus-eventos" class="card">
            <h4>Meus Eventos</h4>
            <!-- Botão de "Adicionar Evento" -->
            <button class="botao-adicionar" onclick="exibirFormularioAdicionar()"></button>
            <!-- Campo de pesquisa -->
            <input type="text" id="campo-pesquisa" placeholder="Pesquisar eventos..." onkeyup="filtrarEventos()">
            <hr>
            <div class="tabela-eventos">
                <table>
                    <thead>
                        <tr>
                            <th style="width:5%; text-align: center;">ID</th>
                            <th style="width:55%; text-align: center;">Nome do Evento</th>
                            <th style="width:15%; text-align: center;">Imagem do Certificado</th>
                            <th style="width:25%; text-align: center;">Ações</th> 
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var evento in Model)
                        {
                            <tr>

                                <td style="text-align: center;">@evento.Id</td>
                                <td style="text-align: center;">@evento.Nome</td>
                                <td style="text-align: center;">
                                    <img src="@Url.Action("VisualizarImagem", "Home_Organizador", new { Id=evento.Id })"
                                         alt="imagem do certificado"
                                         style="width: 60px; height: auto; cursor: pointer;"
                                         onclick="window.open('@Url.Action("VisualizarImagem", "Home_Organizador", new { Id=evento.Id })')">
                                </td>
                                <td style="text-align: center;">
                                    <button class="btn btn-emitir" onclick="emitirCertificado('@evento.Id')">Emitir Certificado</button>
                                    <button class="btn btn-atualizar" onclick="atualizarEvento('@evento.Id')">Atualizar</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Formulário oculto para emissão de certificado -->
        <form id="formEmitirCertificado" asp-controller="Home_Organizador" asp-action="EmitirCertificado" method="post" style="display:none;">
            <input type="hidden" id="eventoId" name="id">
            @Html.AntiForgeryToken()
        </form>


        <div id="card-buscar-pessoas" class="card">
            <h4>Buscar Pessoas</h4>
            <div>
                <input type="text" id="searchInput" placeholder="Digite o nome da pessoa">
                <button onclick="buscarPessoas()">Buscar</button>
                <hr>
                <div id="resultList">
                    <div class="header">
                        <span style="width:5%" class="col-id">ID</span>
                        <span style="width:84%" class="col-nome">Nome</span>
                        <span style="width:6%" class="col-acoes">Ações</span>
                    </div>
                </div>
                <div class="details" id="details"></div>
            </div>
        </div>




    </div>

    <script>
        window.onload = function () {
            mostrarCard('meus-eventos');
            preencherTabelaEventos();
        };

        function mostrarCard(id) {
            var cards = document.querySelectorAll('.card');
            cards.forEach(function (card) {
                card.style.display = 'none';
            });

            var cardToShow = document.getElementById('card-' + id);
            if (cardToShow) {
                cardToShow.style.display = 'block';
            }
        }

        function exibirFormularioAdicionar() {
            var cards = document.querySelectorAll('.card');
            cards.forEach(function (card) {
                card.style.display = 'none';
            });

            var cardNovoEvento = document.getElementById('card-evento');
            if (cardNovoEvento) {
                cardNovoEvento.style.display = 'block';
                cardNovoEvento.scrollIntoView({ behavior: 'smooth' });
            }
        }

       

        function preencherTabelaEventos() {
            var tabelaEventos = document.getElementById('eventos-tbody');
            tabelaEventos.innerHTML = '';

            eventos.forEach(function (evento) {
                var novaLinha = tabelaEventos.insertRow();

                var celulaCodigo = novaLinha.insertCell(0);
                celulaCodigo.textContent = evento.id;

                var celulaNome = novaLinha.insertCell(1);
                celulaNome.textContent = evento.nome;

                var celulaImagem = novaLinha.insertCell(2);
                var img = document.createElement('img');
                img.src = evento.imagem;
                img.style.width = '60px';
                img.style.cursor = 'pointer';
                img.onclick = function () {
                    window.open(evento.imagem);
                };
                celulaImagem.appendChild(img);

                var celulaAcoes = novaLinha.insertCell(3);
                var botaoEmitir = document.createElement('button');
                botaoEmitir.textContent = 'Emitir certificado';
                botaoEmitir.className = 'btn btn-emitir';
                botaoEmitir.onclick = function () {
                    emitirCertificado(evento.nome);
                };
                celulaAcoes.appendChild(botaoEmitir);

                var botaoAtualizar = document.createElement('button');
                botaoAtualizar.textContent = 'Atualizar';
                botaoAtualizar.className = 'btn btn-atualizar';
                botaoAtualizar.onclick = function () {
                    atualizarEvento(evento.nome);
                };
                celulaAcoes.appendChild(botaoAtualizar);
            });

            destacarCPFsInvalidos();
        }

        // function emitirCertificado(nome) {
        //     alert('Emitir certificado para: ' + nome);
        // }

        function emitirCertificado(id) {
            // Preencher o campo do formulário oculto
            document.getElementById('eventoId').value = id;

            // Submeter o formulário oculto
            document.getElementById('formEmitirCertificado').submit();
        }

        function atualizarEvento(nome) {
            alert('Atualizar evento: ' + nome);
        }

        var modoAdicionar = true;
        var linhaEditavel;

        function adicionarBotoesLinha(linha) {
            var colunaAcoes = linha.insertCell(-1);
            var botaoExcluir = document.createElement("button");
            botaoExcluir.textContent = "Excluir";
            botaoExcluir.className = 'btn table-btn';
            botaoExcluir.onclick = function (event) {
                event.preventDefault(); // Prevenir a ação padrão de submissão do formulário
                excluirLinha(linha);
                destacarCPFsInvalidos();
            };
            colunaAcoes.appendChild(botaoExcluir);

            var botaoAtualizar = document.createElement("button");
            botaoAtualizar.textContent = "Atualizar";
            botaoAtualizar.className = 'btn table-btn';
            botaoAtualizar.onclick = function (event) {
                event.preventDefault(); // Prevenir a ação padrão de submissão do formulário
                carregarDadosParaEditar(linha);
            };
            colunaAcoes.appendChild(botaoAtualizar);
        }

        function atualizarDados() {
            if (modoAdicionar) {
                var tabela = document.getElementById("tabela");
                var nome = document.getElementById("inputNome").value;
                var cpf = document.getElementById("inputCPF").value;
                var email = document.getElementById("inputEmail1").value;
                var tipoPessoa = document.getElementById("tipoPessoa").value;
                var texto = document.getElementById("textareaTexto").value;

                if (nome === "" || cpf === "" || email === "" || tipoPessoa === "" || texto === "") {
                    alert("Por favor, preencha todos os campos.");
                    return;
                }

                var novaLinha = tabela.insertRow(-1);
                var celulaNome = novaLinha.insertCell(0);
                var celulaCPF = novaLinha.insertCell(1);
                var celulaEmail = novaLinha.insertCell(2);
                var celulaTipoPessoa = novaLinha.insertCell(3);
                var celulaTexto = novaLinha.insertCell(4);

                celulaNome.textContent = nome;
                celulaCPF.textContent = cpf;
                celulaEmail.textContent = email;
                celulaTipoPessoa.textContent = tipoPessoa;
                celulaTexto.textContent = texto;

                adicionarBotoesLinha(novaLinha);
                limparCampos();
                destacarCPFsInvalidos();
            } else {
                var celulas = linhaEditavel.getElementsByTagName("td");
                celulas[0].textContent = document.getElementById("inputNome").value;
                celulas[1].textContent = document.getElementById("inputCPF").value;
                celulas[2].textContent = document.getElementById("inputEmail1").value;
                celulas[3].textContent = document.getElementById("tipoPessoa").value;
                celulas[4].textContent = document.getElementById("textareaTexto").value;
                alternarModo();
                limparCampos();
                destacarCPFsInvalidos();
            }
        }

        function excluirLinha(linha) {
            var index = linha.rowIndex;
            document.getElementById("tabela").deleteRow(index);
            destacarCPFsInvalidos();
        }

        function carregarDadosParaEditar(linha) {
            var celulas = linha.getElementsByTagName("td");
            document.getElementById("inputNome").value = celulas[0].textContent;
            document.getElementById("inputCPF").value = celulas[1].textContent;
            document.getElementById("inputEmail1").value = celulas[2].textContent;
            document.getElementById("tipoPessoa").value = celulas[3].textContent;
            document.getElementById("textareaTexto").value = celulas[4].textContent;

            linhaEditavel = linha;
            alternarModo();
        }

        function alternarModo() {
            modoAdicionar = !modoAdicionar;
            var botaoAcao = document.getElementById("botaoAcao");
            botaoAcao.textContent = modoAdicionar ? "Adicionar Dados" : "Atualizar Dados";
        }

        function limparCampos() {
            document.getElementById("inputNome").value = "";
            document.getElementById("inputCPF").value = "";
            document.getElementById("inputEmail1").value = "";
            document.getElementById("tipoPessoa").value = "";
            document.getElementById("textareaTexto").value = "";
        }

        function importarExcel() {
            var input = document.getElementById('excelFile');
            if (!input.files || input.files.length === 0) {
                alert('Por favor, selecione um arquivo Excel.');
                return;
            }
            var file = input.files[0];
            document.getElementById('fileName').textContent = file.name; // Exibe o nome do arquivo
            var reader = new FileReader();

            reader.onload = function (e) {
                var data = new Uint8Array(e.target.result);
                var workbook = XLSX.read(data, { type: 'array' });
                var sheetName = workbook.SheetNames[0];
                var worksheet = workbook.Sheets[sheetName];

                var expectedColumns = ['NOME_PESSOA', 'CPF_PESSOA', 'EMAIL_PESSOA', 'TIPO_PESSOA', 'TEXTO'];
                var headerRow = XLSX.utils.sheet_to_json(worksheet, { header: 1, range: 'A1:E1' })[0];
                var isValidModel = expectedColumns.every(function (col, index) {
                    return headerRow[index] === col;
                });

                if (!isValidModel) {
                    alert('O modelo da planilha selecionada está incorreto.');
                    return;
                }

                var table = document.getElementById('tabela').getElementsByTagName('tbody')[0];
                table.innerHTML = ''; // Limpa a tabela antes de adicionar novas linhas

                var rows = XLSX.utils.sheet_to_json(worksheet, { header: 1, range: 1 });
                rows.forEach(function (row, rowIndex) {
                    var newRow = table.insertRow(-1);
                    row.forEach(function (cellContent) {
                        var cell = newRow.insertCell();
                        cell.textContent = cellContent;
                    });
                    // Adiciona botões de ação a cada linha, exceto se for a última linha do arquivo
                    if (rowIndex < rows.length - 1) {
                        adicionarBotoesLinha(newRow);
                    }
                });
                destacarDuplicatas(); // Destaca duplicatas após carregar os dados
            };
            reader.readAsArrayBuffer(file);
        }

        function importarCertificado() {
            var input = document.getElementById('arteCertificadoFile');
            if (!input.files || input.files.length === 0) {
                alert('Por favor, selecione um arquivo de certificado.');
                return;
            }
            var file = input.files[0];
            document.getElementById('certificadoFileName').textContent = file.name; // Exibe o nome do arquivo
        }

        function cadastrarEvento() {
            var nomeEvento = document.getElementById('nomeEvento').value;
            if (nomeEvento.trim() === '') {
                alert('Por favor, insira o nome do evento.');
                return;
            }

            var tabelaEventos = document.getElementById('eventos-tbody');
            var novaLinha = tabelaEventos.insertRow(-1);

            var celulaCodigo = novaLinha.insertCell(0);
            celulaCodigo.textContent = eventos.length + 1; 

            var celulaNome = novaLinha.insertCell(1);
            celulaNome.textContent = nomeEvento;

            var celulaImagem = novaLinha.insertCell(2);
            var imgCertificado = document.createElement('img');
            var certificadoFile = document.getElementById('arteCertificadoFile').files[0];
            if (certificadoFile) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    imgCertificado.src = e.target.result;
                    imgCertificado.style.width = '60px';
                    celulaImagem.appendChild(imgCertificado);
                };
                reader.readAsDataURL(certificadoFile);
            } else {
                imgCertificado.src = '';
                celulaImagem.appendChild(imgCertificado);
            }

            var celulaAcoes = novaLinha.insertCell(3);

            var botaoEmitir = document.createElement('button');
            botaoEmitir.textContent = 'Emitir certificado';
            botaoEmitir.className = 'btn btn-emitir'; // Classe para estilizar
            botaoEmitir.onclick = function () {
                emitirCertificado(nomeEvento);
            };
            celulaAcoes.appendChild(botaoEmitir);

            var botaoAtualizar = document.createElement('button');
            botaoAtualizar.textContent = 'Atualizar';
            botaoAtualizar.className = 'btn btn-atualizar'; // Classe para estilizar
            botaoAtualizar.onclick = function () {
                atualizarEvento(nomeEvento);
            };
            celulaAcoes.appendChild(botaoAtualizar);

            // Adiciona o novo evento à lista de eventos
            eventos.push({ id: eventos.length + 1, nome: nomeEvento, data: new Date().toLocaleDateString(), imagem: imgCertificado.src });

            // Envia os dados do evento para o backend
            enviarDadosEvento();
        }

        function enviarDadosEvento() {
            var nomeEvento = document.getElementById('nomeEvento').value;
            var arquivoCertificado = document.getElementById('arteCertificadoFile').files[0];
            var tabela = document.getElementById('tabela');
            var dadosTabela = [];
            var linhas = tabela.getElementsByTagName('tr');

            for (var i = 1; i < linhas.length; i++) {
                var linha = linhas[i];
                var celulas = linha.getElementsByTagName('td');
                var dadosLinha = [];

                for (var j = 0; j < celulas.length - 1; j++) {
                    dadosLinha.push(celulas[j].textContent);
                }

                dadosTabela.push(dadosLinha);
            }

            var formData = new FormData();
            formData.append('Nome', nomeEvento);
            formData.append('ImagemCertificado', arquivoCertificado);

            // Transformar dadosTabela em JSON e adicionar ao FormData como um campo string
            formData.append('DadosTabela', JSON.stringify(dadosTabela));

            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/Home_Organizador/NovoEvento');
            xhr.setRequestHeader('RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);
            xhr.onload = function () {
                if (xhr.status === 200) {
                    alert('Evento cadastrado com sucesso!');
                    window.location.href = '/Home_Organizador/Index';
                } else {
                    alert('Erro ao cadastrar o evento. Por favor, tente novamente.');
                }
            };
            xhr.send(formData);
        }

        // // Função para enviar os dados do evento para o controller
        // function enviarDadosEvento() {
        //     // Obter o nome do evento
        //     var nomeEvento = document.getElementById('nomeEvento').value;

        //     // Obter a imagem do certificado
        //     var arquivoCertificado = document.getElementById('arteCertificadoFile').files[0];

        //     // Construir o objeto FormData para enviar os dados
        //     var formData = new FormData();
        //     formData.append('Nome', nomeEvento);
        //     formData.append('ImagemCertificado', arquivoCertificado);

        //     // Adicionar o token antifalsificação à solicitação
        //     formData.append('__RequestVerificationToken', token);

        //     // Enviar os dados para o controller usando AJAX
        //     var xhr = new XMLHttpRequest();
        //     xhr.open('POST', '/Home_Organizador/NovoEvento');
        //     xhr.onload = function () {
        //         // Tratar a resposta do servidor, se necessário
        //         if (xhr.status === 200) {
        //             alert('Evento cadastrado com sucesso!');
        //             // Redirecionar para a página inicial, por exemplo
        //             window.location.href = '/Home_Organizador/Index';
        //         } else {
        //             alert('Erro ao cadastrar o evento. Por favor, tente novamente.');
        //         }
        //     };
        //     xhr.send(formData);
        // }

        function filtrarEventos() {
            var input = document.getElementById('campo-pesquisa');
            var filter = input.value.toUpperCase();
            var tbody = document.getElementById("eventos-tbody");
            var tr = tbody.getElementsByTagName("tr");

            for (var i = 0; i < tr.length; i++) {
                var td = tr[i].getElementsByTagName("td")[1]; // Index 1 é a coluna do Nome do Evento
                if (td) {
                    var txtValue = td.textContent || td.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }

        function destacarDuplicatas() {
            const tabela = document.getElementById("tabela").getElementsByTagName("tbody")[0];
            const linhas = tabela.getElementsByTagName("tr");
            let valoresVistos = {
                nome: {},
                cpf: {},
                email: {},
                texto: {}
            };

            Array.from(linhas).forEach((linha, linhaIndex) => {
                ["nome", "cpf", "email", "texto"].forEach((campo, index) => {
                    const valor = linha.cells[index].textContent.trim();
                    console.log(`Processando: ${campo}, Valor: ${valor}, Linha: ${linhaIndex}`); // Debugar valor e linha
                    if (valoresVistos[campo][valor]) {
                        valoresVistos[campo][valor].push(linha.cells[index]);
                    } else {
                        valoresVistos[campo][valor] = [linha.cells[index]];
                    }
                });
            });

            Object.keys(valoresVistos).forEach(campo => {
                console.log(`Duplicatas em ${campo}:`, valoresVistos[campo]); // Mostrar estrutura de duplicatas
                Object.keys(valoresVistos[campo]).forEach(valor => {
                    if (valoresVistos[campo][valor].length > 1) {
                        valoresVistos[campo][valor].forEach(celula => {
                            celula.classList.add('duplicado');
                        });
                    }
                });
            });
        }

        function destacarCPFsInvalidos() {
            var tabela = document.getElementById("tabela");
            var linhas = tabela.getElementsByTagName("tr");
            for (var i = 0; i < linhas.length; i++) {
                var celulaCPF = linhas[i].getElementsByTagName("td")[1]; // Assume que CPF está na segunda coluna
                if (celulaCPF && !validarCPF(celulaCPF.textContent)) {
                    celulaCPF.style.backgroundColor = 'red'; // Pinta de vermelho se o CPF for inválido
                }
            }
        }

        function validarCPF(cpf) {
            cpf = cpf.replace(/[^\d]+/g, '');
            if (cpf.length != 11) {
                return false;
            }

            var numeros = cpf.substring(0, 9);
            var digitos = cpf.substring(9);
            var soma = 0;
            var resultado;

            for (var i = 10; i > 1; i--) {
                soma += numeros.charAt(10 - i) * i;
            }

            resultado = (soma % 11) < 2 ? 0 : 11 - (soma % 11);
            if (resultado != parseInt(digitos.charAt(0))) {
                return false;
            }

            soma = 0;
            numeros = cpf.substring(0, 10);
            for (i = 11; i > 1; i--) {
                soma += numeros.charAt(11 - i) * i;
            }

            resultado = (soma % 11) < 2 ? 0 : 11 - (soma % 11);
            return resultado == parseInt(digitos.charAt(1));
        }






        function buscarPessoas() {
            var termo = $("#searchInput").val();
            if (termo.length >= 3) { // Buscar apenas se o nome tiver 3 ou mais caracteres
                $.ajax({
                    url: '/Pessoa/BuscarPessoas',
                    type: 'GET',
                    data: { termo: termo },
                    success: function (data) {
                        var resultList = $("#resultList");
                        resultList.find(".result-item, .detalhes").remove(); // Limpar resultados anteriores

                        data.forEach(function (pessoa) {
                            var detalhesInline = "<span class='detalhes-inline'> " +
                                pessoa.cpf + " &#x2714; " + pessoa.email + "</span>";
                            var item = $("<div class='result-item'></div>")
                                .append("<span class='col-id'>" + pessoa.id + "</span>")
                                .append("<span class='col-nome'>" + pessoa.nome + detalhesInline + "</span>")
                                .append(`
                                    <div class="acoes-dropdown">
                                        <button class='acoes-btn' onclick="toggleDropdown(this)">Ações</button>
                                        <div class="acoes-dropdown-content">
                                            <button onclick="exibirCertificado(this)">Exibir Certificado</button>
                                            <button onclick="acao2()">Reenviar Instruções</button>
                                            <button onclick="acao3()">Corrigir E-mail</button>
                                        </div>
                                    </div>
                                `)
                                .data("id", pessoa.id)
                                .data("cpf", pessoa.cpf)
                                .data("email", pessoa.email)
                                .data("certificado", pessoa.certificado);

                            var certificado = pessoa.certificado ? pessoa.certificado : "undefined";
                            var certificadoDiv = $("<div class='certificado'></div>")
                                .append("<a class='certificado-link' href='#' onclick='abrirCertificado(\"" + pessoa.certificado + "\")'>" + certificado + "</a>")

                            resultList.append(item).append(certificadoDiv);
                        });
                    },
                    error: function () {
                        alert("Erro ao buscar pessoas.");
                    }
                });
            }
        }

        function toggleDropdown(button) {
            $(button).next(".acoes-dropdown-content").toggle();
        }

        function exibirCertificado(button) {
            var item = $(button).closest('.result-item');
            item.next(".certificado").slideToggle("slow"); // Aplica o efeito de deslizamento lento
        }

        function abrirCertificado(certificadoUrl) {
            if (certificadoUrl && certificadoUrl !== "undefined") {
                window.open(certificadoUrl, '_blank');
            } else {
                alert("Certificado não disponível");
            }
        }

        function acao2() {
            alert("Ação 2 executada");
        }

        function acao3() {
            alert("Ação 3 executada");
        }










        function exibirDetalhes(id, nome, cpf, email) {
            var details = $("#details");
            details.empty(); // Limpar detalhes anteriores

            details.append("<p>ID: " + id + "</p>");
            details.append("<p>Nome: " + nome + "</p>");
            details.append("<p>CPF: " + cpf + "</p>");
            details.append("<p>Email: " + email + "</p>");
        }





        //Define conteudo do input da imagem do certificado
        document.getElementById('arteCertificadoFile').addEventListener('change', function () {
            var fileInput = document.getElementById('arteCertificadoFile');
            var novoInputText = document.getElementById('novoInputText');
            if (fileInput.files.length > 0) {
                novoInputText.value = fileInput.files[0].name;
            } else {
                novoInputText.value = '';
            }
        });

        function processarDadosTabela(event) {
            var tableData = [];
            var rows = document.querySelectorAll('#eventos-tbody tr');

            // Verifica se há mais de uma linha antes de excluir a última linha
            if (rows.length > 1) {

                // Remove a última linha da lista de linhas
                rows = Array.from(rows).slice(0, -1);

                rows.forEach(row => {
                    var cells = row.querySelectorAll('td');
                    var rowData = {
                        nome: cells[0].textContent,
                        cpf: cells[1].textContent,
                        email: cells[2].textContent,
                        tipoPessoa: cells[3].textContent,
                        texto: cells[4].textContent
                    };
                    tableData.push(rowData);
                });
                document.getElementById('tableData').value = JSON.stringify(tableData);
            } else {
                // Se não houver dados suficientes na tabela, exibe um alerta
                alert('Por favor, importe uma planilha com registros válidos.');
                event.preventDefault(); // Prevenir a ação padrão de submissão do formulário
                return false;
            }
        }

    </script>

</body>
</html>

